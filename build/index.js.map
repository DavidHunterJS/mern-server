{"version":3,"file":"index.js","names":["require","_express","_interopRequireDefault","_mongoose","_https","_fs","_path","_passport","_cors","_routes","_seed","obj","__esModule","default","app","express","use","cors","origin","json","urlencoded","extended","passport","initialize","isProduction","process","env","NODE_ENV","dbConnection","MONGO_URI_PROD","MONGO_URI_DEV","mongoose","connect","useNewUrlParser","useCreateIndex","useUnifiedTopology","useFindAndModify","then","console","log","seedDb","catch","err","routes","static","join","__dirname","port","PORT","listen","httpsOptions","key","readFileSync","resolve","cert","server","https","createServer"],"sources":["../src/index.js"],"sourcesContent":["import 'dotenv/config';\nimport express from 'express';\nimport mongoose from 'mongoose';\nimport https from 'https';\nimport { readFileSync } from 'fs';\nimport { resolve, join } from 'path';\nimport passport from 'passport';\n// import all_routes from 'express-list-endpoints';\nimport cors from 'cors';\n\nimport routes from './routes';\nimport { seedDb } from './utils/seed';\n\nconst app = express();\n\napp.use(\n  cors({\n    origin: '*',\n  }),\n);\n// Bodyparser Middleware\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\napp.use(passport.initialize());\nrequire('./services/jwtStrategy');\nrequire('./services/facebookStrategy');\nrequire('./services/googleStrategy');\nrequire('./services/localStrategy');\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\n// DB Config\nconst dbConnection = isProduction ? process.env.MONGO_URI_PROD : process.env.MONGO_URI_DEV;\n\n// Connect to Mongo\nmongoose\n  .connect(dbConnection, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useUnifiedTopology: true,\n    useFindAndModify: false,\n  })\n  .then(() => {\n    console.log('MongoDB Connected...');\n    seedDb();\n  })\n  .catch((err) => console.log(err));\n\n// Use Routes\napp.use('/', routes);\napp.use('/public/images', express.static(join(__dirname, '../public/images')));\n\n// Serve static assets if in production\nif (isProduction) {\n  // Set static folder\n  // nginx will handle this\n  // app.use(express.static(join(__dirname, '../../client/build')));\n\n  // app.get('*', (req, res) => {\n  //   // index is in /server/src so 2 folders up\n  //   res.sendFile(resolve(__dirname, '../..', 'client', 'build', 'index.html'));\n  // });\n\n  const port = process.env.PORT || 80;\n  app.listen(port, () => console.log(`Server started on port ${port}`));\n} else {\n  const port = process.env.PORT || 5000;\n\n  const httpsOptions = {\n    key: readFileSync(resolve(__dirname, '../security/cert.key')),\n    cert: readFileSync(resolve(__dirname, '../security/cert.pem')),\n  };\n\n  const server = https.createServer(httpsOptions, app).listen(port, () => {\n    console.log('https server running at ' + port);\n    // console.log(all_routes(app));\n  });\n}\n"],"mappings":"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","ignoreList":[]}